apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: {{ printf "%s-rabbitmqcluster" .Chart.Name }}
  labels:
    app.kubernetes.io/name: {{ printf "%s-rabbitmqcluster" .Chart.Name }}
    {{- if .Values.mongodb.labels }}
    {{- toYaml .Values.mongodb.labels | nindent 4 }}
    {{- end }}
    {{- include "resource.labels.commonLabels" .  | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  namespace: {{ include "namespace.name" . }}
  {{- if or .Values.mongodb.annotations .Values.commonAnnotations }}
  annotations: 
    {{- if .Values.mongodb.annotations }}
    {{- toYaml .Values.mongodb.annotations | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  override:
    statefulSet:
      spec:
        template:
          spec:
            initContainers:
              {{- if .Values.rabbitmq.initContainers.volumePermissionContainer.create }}
              - name: change-dir-permissions-data
                command:
                  - sh
                args:
                  - -ec
                  - |
                    mkdir -p /var/lib/rabbitmq/mnesia/
                    chown -R 1001:1001 /var/lib/rabbitmq/mnesia/
                image: {{ .Values.rabbitmq.initContainers.image }}
                volumeMounts:
                - mountPath: /var/lib/rabbitmq/mnesia/
                  name: persistence
                securityContext:
                  privileged: {{ .Values.rabbitmq.securityContext.privileged }}
                  allowPrivilegeEscalation: {{ .Values.rabbitmq.securityContext.allowPrivilegeEscalation }}
                  runAsNonRoot: false
                  runAsUser: 0
                  runAsGroup: 0
                  capabilities:
                    drop:
                      - ALL
              {{- end }}
              - name: setup-container
                securityContext:
                  privileged: {{ .Values.rabbitmq.securityContext.privileged }}
                  allowPrivilegeEscalation: {{ .Values.rabbitmq.securityContext.allowPrivilegeEscalation }}
                  runAsUser: 1001
                  runAsGroup: 1001
                  capabilities:
                    drop:
                      - ALL
            containers:
              - name: rabbitmq
                securityContext:
                  privileged: {{ .Values.rabbitmq.securityContext.privileged }}
                  allowPrivilegeEscalation: {{ .Values.rabbitmq.securityContext.allowPrivilegeEscalation }}
                  runAsUser: 1001
                  runAsGroup: 1001
                  capabilities:
                    drop:
                      - ALL
                env: 
                  - name: RABBITMQ_DEFAULT_USER
                    value: {{ .Values.rabbitmq.auth.rabbitmqDefaultUser }}
                  - name: RABBITMQ_DEFAULT_PASS
                    valueFrom:
                      secretKeyRef:
                        key: rabbitmq-default-password
                        name: {{ printf "%s-rabbitmq-secret" .Chart.Name }}
                  - name: RABBITMQ_DISK_FREE_LIMIT_ABSOLUTE
                    value: "1"
  image: {{ .Values.rabbitmq.image }}
  replicas: {{ .Values.rabbitmq.replicaCount }}
  resources: {{- toYaml .Values.rabbitmq.resources | nindent 4 }}
  persistence:
    storageClassName: {{ .Values.rabbitmq.persistence.storageClassName }}
    storage: {{ .Values.rabbitmq.persistence.size | quote }}
  rabbitmq:
    additionalConfig: |
      consumer_timeout = 86400000
      disk_free_limit.absolute = 3GB  
      total_memory_available_override_value = 3GB
      vm_memory_high_watermark_paging_ratio = 0.60
      vm_memory_high_watermark.relative = 0.80
      cluster_partition_handling = autoheal