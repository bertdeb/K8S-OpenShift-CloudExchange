{{ $ca_cert := .Files.Get "ca-certificates/ca.pem" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-core-secret" .Chart.Name }}
  labels:
    app.kubernetes.io/name: {{ printf "%s-core-secret" .Chart.Name }}
    {{- include "resource.labels.commonLabels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  namespace: {{ include "namespace.name" . }}
  {{- if .Values.commonAnnotations }}
  annotations: 
    {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  analytics-token: {{ required "Analytics Token cannot be empty!" .Values.core.auth.analyticsToken | b64enc }}
  jwt-secret: {{ required "JWT Secret cannot be empty!" .Values.core.auth.jwtToken | b64enc }}

---
{{- if .Values.core.caCertificate }}
{{- if $ca_cert }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-ca-certificate-secret" .Chart.Name }}
  labels:
    app.kubernetes.io/name: {{ printf "%s-ca-certificate-secret" .Chart.Name }}
    {{- include "resource.labels.commonLabels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  namespace: {{ include "namespace.name" . }}
  {{- if .Values.commonAnnotations }}
  annotations: 
    {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
{{ (.Files.Glob "ca-certificates/*").AsSecrets | indent 2 }} 
{{- else }}
{{- fail "If CA cert enabled then CA certificate should be present in ca-certificates directory with ca.pem file name." }}
{{- end }}
{{- end }}

